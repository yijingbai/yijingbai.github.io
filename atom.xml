<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Yijing's Blog]]></title>
  <subtitle><![CDATA[Full-Stack Developer, Hackathon Lover]]></subtitle>
  <link href="http://yijingbai.github.io/blog/atom.xml" rel="self"/>
  <link href="http://yijingbai.github.io/blog"/>
  <updated>2013-12-11T14:48:00.808Z</updated>
  <id>http://yijingbai.github.io/blog/</id>
  <author>
    <name><![CDATA[YiJing Bai]]></name>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[I learned nodejs]]></title>
    <link href="http://yijingbai.github.io/blog/2013/12/11/i-learned-nodejs/"/>
    <id>http://yijingbai.github.io/blog/2013/12/11/i-learned-nodejs/</id>
    <published>2013-12-11T14:35:39.000Z</published>
    <updated>2013-12-11T14:36:15.000Z</updated>
    <content type="html"><![CDATA[<p>Today, I learned nodejs, it is a powerful language.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[how to use django-RESTful api framework]]></title>
    <link href="http://yijingbai.github.io/blog/2013/12/03/how-to-use-django-restful-api-framework/"/>
    <id>http://yijingbai.github.io/blog/2013/12/03/how-to-use-django-restful-api-framework/</id>
    <published>2013-12-03T15:58:38.000Z</published>
    <updated>2013-12-11T14:47:52.000Z</updated>
    <content type="html"><![CDATA[<p>These days, I always use django restful framework to make some RESTful API. And also face many questions.</p>
<p>So I will write a summary here about these questions and some tricks to use this.</p>
<figure class="highlight lang-py"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="title">ProtoFieldsViewSet</span><span class="params">(WrapCreateModelMixin,
                        WrapUpdateModelMixin,
                        WrapRetrieveModelMixin,
                        WrapListModelMixin,
                        viewsets.GenericViewSet)</span>:</span>
    <span class="string">"""
    ProtoField的viewsets,包括新建,更新,详情,列表
    """</span>
    queryset = ProtoField.objects.order_by(<span class="string">'source'</span>)
    serializer_class = ProtoFieldSerializer
</pre></td></tr></table></figure>

<p>For example, use this code could easily make a api with POST,PUT,GET and can provide create,update,get,list object function.</p>
<p>This is kind of a muti-extend. with the basic genericViewSet provide the base function and property, and then if you need some function, you just need to add the corresponding mixins.</p>
<p>If you don&#39;t want to use the provided mixin, you can write API your self:</p>
<figure class="highlight lang-py"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="title">ProtoFieldsValidation</span><span class="params">(APIView)</span>:</span>
    <span class="string">"""
    判断Protofield是否有重复的API
    """</span>
    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span>
        <span class="keyword">if</span> <span class="string">'key'</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:
            <span class="keyword">return</span> Response(returnSuccess(<span class="string">'Please Provide key'</span>))
        fields = ProtoField.objects.filter(status=<span class="number">1</span>)
        keylist = [p.key <span class="keyword">for</span> p <span class="keyword">in</span> fields]
        <span class="keyword">return</span> Response(returnSuccess({<span class="string">'result'</span>: kwargs[<span class="string">'key'</span>] <span class="keyword">not</span> <span class="keyword">in</span> keylist}))
</pre></td></tr></table></figure>

<p>like this. You just need to make a Class that extend APIView class. Then you can add get, post, put …etc. function corresponding to the GET,PUT,POST requests.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[RESTful API design]]></title>
    <link href="http://yijingbai.github.io/blog/2013/11/12/restful-api-design/"/>
    <id>http://yijingbai.github.io/blog/2013/11/12/restful-api-design/</id>
    <published>2013-11-12T10:59:28.000Z</published>
    <updated>2013-11-12T11:06:00.000Z</updated>
    <content type="html"><![CDATA[<p>I have startied to study RESTful API,Use Django Restful API framework</p>
]]></content>
    <category scheme="http://yijingbai.github.io/blog/tags/RESTful/" term="RESTful"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Wating for my JingJS buddy]]></title>
    <link href="http://yijingbai.github.io/blog/2013/11/08/wating-for-my-jingjs-buddy/"/>
    <id>http://yijingbai.github.io/blog/2013/11/08/wating-for-my-jingjs-buddy/</id>
    <published>2013-11-08T13:05:25.000Z</published>
    <updated>2013-11-08T16:32:00.000Z</updated>
    <content type="html"><![CDATA[<p>I will be a volunteer of JingJS during this weekend and I am buddy of a foreign speaker, nick.<br>Now I am wating for him, and hope to see him later~ lol<br><img src="http://ww2.sinaimg.cn/large/74007c8ejw1eae22tj9nej21kw16odsh.jpg" alt=""></p>
]]></content>
    <category scheme="http://yijingbai.github.io/blog/tags/conference social/" term="conference social"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[How to define __unicode__ for django model]]></title>
    <link href="http://yijingbai.github.io/blog/2013/11/08/how-to-define-unicode-function-for-django-model/"/>
    <id>http://yijingbai.github.io/blog/2013/11/08/how-to-define-unicode-function-for-django-model/</id>
    <published>2013-11-08T07:49:16.000Z</published>
    <updated>2013-11-08T08:28:25.000Z</updated>
    <content type="html"><![CDATA[<p>Today I wrote a simple model using django, to make it display more friendly, we have to implement a __unicode__  function like this:</p>
<figure class="highlight lang-python"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">()</span>:</span>
	<span class="keyword">return</span>
</pre></td></tr></table></figure>

<p>but writing something like</p>
<pre><code>"hello <span class="special">{</span>0<span class="special">}</span><span class="command">\n</span><span class="command">\t</span> world <span class="special">{</span>1<span class="special">}</span><span class="command">\n</span><span class="command">\t</span>".format(src, dest)</code></pre>
<p>is ugly, so we can use a easier way:</p>
<figure class="highlight lang-python"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre> <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span>
        <span class="keyword">return</span> <span class="string">u"""
        Configure {0}:
            User: {1}
            status: {2}
            datapath: {3}
            datarule: {4}
            retaintime: {5}
            update_time: {6}
        """</span>.format(
            self.id, self.user, self.status,
            self.datapath, self.datarule,
            self.retaintime, self.update_time)
</pre></td></tr></table></figure>

<p><strong>remember add u</strong> before “”“, and the format in ”“” “”&quot; will be saved,so we do not need to write \t or \n etc. anymore.</p>
]]></content>
    <category scheme="http://yijingbai.github.io/blog/tags/python django/" term="python django"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Hexo configuration]]></title>
    <link href="http://yijingbai.github.io/blog/2013/11/07/hexo-使用配置/"/>
    <id>http://yijingbai.github.io/blog/2013/11/07/hexo-使用配置/</id>
    <published>2013-11-07T12:59:00.000Z</published>
    <updated>2013-12-03T16:24:10.000Z</updated>
    <content type="html"><![CDATA[<p>When using Hexo, especially it is deployed on a second directory, we should not only change following attribute in _config.yml</p>
<pre><code><span class="title">url</span>:
<span class="title">root</span>:</code></pre>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>    <span class="attribute">efefef
</pre></td></tr></table></figure>

<p>but also change</p>
<pre><code>themes/theme name/<span class="filename">_config.yml</code></pre>
<p>if you forget that, the js, css file in the template will not be loaded successfully.</p>
]]></content>
    <category scheme="http://yijingbai.github.io/blog/tags/Hexo blog/" term="Hexo blog"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[hello world]]></title>
    <link href="http://yijingbai.github.io/blog/2013/11/07/hello-world-1/"/>
    <id>http://yijingbai.github.io/blog/2013/11/07/hello-world-1/</id>
    <published>2013-11-07T12:22:20.000Z</published>
    <updated>2013-11-08T08:18:07.000Z</updated>
    <content type="html"><![CDATA[<h3>My First Post</h3>
<p>I begin to write post~<br>This is my first post, I will put my development experiences there.</p>
]]></content>
  </entry>
</feed>
