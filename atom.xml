<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Yijing's Blog]]></title>
  <subtitle><![CDATA[Full-Stack Developer, Hackathon Lover]]></subtitle>
  <link href="http://yijingbai.github.io/blog/atom.xml" rel="self"/>
  <link href="http://yijingbai.github.io/blog"/>
  <updated>2014-05-21T15:11:01.151Z</updated>
  <id>http://yijingbai.github.io/blog/</id>
  <author>
    <name><![CDATA[YiJing Bai]]></name>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[Something about post json using .ajax in jquery]]></title>
    <link href="http://yijingbai.github.io/blog/2014/05/21/something-about-post-json-using-ajax-in-jquery/"/>
    <id>http://yijingbai.github.io/blog/2014/05/21/something-about-post-json-using-ajax-in-jquery/</id>
    <published>2014-05-21T14:56:48.000Z</published>
    <updated>2014-05-21T15:07:10.000Z</updated>
    <content type="html"><![CDATA[<p>When I try to use jquery&#39;s <code>$.ajax</code> method post a json to server, I found a strange phenomenon that if I pass the json object as data, it will post it as a form string. For example, the object I want to post is:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="rules">{
    <span class="rule"><span class="attribute">name</span>:<span class="value"> <span class="string">'yijing'</span>,
    age:  <span class="string">'22'</span>,
    like: [<span class="string">'computer'</span>, <span class="string">'swimming'</span>]
}</span></span></span>
</pre></td></tr></table></figure>

<p>the array in it will transform to a string thing:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="attribute">like[]</span>: <span class="string">'computer'</span>
<span class="attribute">like[]</span>: <span class="string">'swiming'</span>
</pre></td></tr></table></figure>

<p>when server side parse it as a json string, it will cause an error.</p>
<p>The problem is that you can not directly pass the object to the data field of .ajax()&#39;s config, you should covert it to a json string:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="filename">JSON.stringify(dataobject)
</pre></td></tr></table></figure>

<p>What‘s more, if you want post a json to server, don’t forget to add contentType in the config:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>contentType:"application/json;char<span class="operator"><span class="keyword">set</span>=utf-<span class="number">8</span><span class="string">"
</pre></td></tr></table></figure>

<p>because the .ajax method automatically set it as form if you don&#39;t pass it.</p>
]]></content>
    <category scheme="http://yijingbai.github.io/blog/tags/jquery ajax/" term="jquery ajax"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Thinking of my FUTURE]]></title>
    <link href="http://yijingbai.github.io/blog/2014/05/19/thinking-of-my-future/"/>
    <id>http://yijingbai.github.io/blog/2014/05/19/thinking-of-my-future/</id>
    <published>2014-05-19T13:32:37.000Z</published>
    <updated>2014-05-19T13:35:34.000Z</updated>
    <content type="html"><![CDATA[<p>I am in a decadent status for about 1 month.</p>
<p>In This period of time, I have always thought about my future and what way I want to go.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[a new way to use _.template]]></title>
    <link href="http://yijingbai.github.io/blog/2014/05/19/a-new-way-to-use-_template/"/>
    <id>http://yijingbai.github.io/blog/2014/05/19/a-new-way-to-use-_template/</id>
    <published>2014-05-19T13:15:05.000Z</published>
    <updated>2014-05-19T13:23:27.000Z</updated>
    <content type="html"><![CDATA[<p>Today, I decided to use Backbone to write a new webapp. Then I read the document of it, and found a interesting technique to use <code>_.template</code> of <code>underscore.js</code>.</p>
<p>The old way I use it is like that:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="code"><pre>var timelineTemplate = _.template('<span class="tag">&lt;<span class="title">li</span>&gt;</span>\
                  <span class="tag">&lt;<span class="title">time</span> <span class="attribute">class</span>=<span class="value">"cbp_tmtime"</span>&gt;</span>\
                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"date"</span>&gt;</span><span class="vbscript">&lt;%= <span class="built_in">day</span> %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>\
                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"time"</span>&gt;</span>\
                      <span class="vbscript">&lt;%= <span class="built_in">time</span> %&gt;</span>\
                      <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"semi-bold"</span>&gt;</span><span class="vbscript">&lt;%= moa %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>\
                    <span class="tag">&lt;/<span class="title">span</span>&gt;</span>\
                  <span class="tag">&lt;/<span class="title">time</span>&gt;</span>\
                  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"cbp_tmicon success animated bounceIn"</span>&gt;</span>\
                    <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-comments"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span>\
                  <span class="tag">&lt;/<span class="title">div</span>&gt;</span>\
                  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"cbp_tmlabel"</span>&gt;</span>\
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"p-t-10 p-l-30 p-r-20 p-b-20 xs-p-r-10 xs-p-l-10 xs-p-t-5"</span>&gt;</span>\
                      <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"m-t-5 dark-text"</span> <span class="attribute">style</span>=<span class="value">"text-align:center;"</span>&gt;</span>\
                        <span class="tag">&lt;<span class="title">h3</span> &gt;</span>\
                          <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"semi-bold"</span>&gt;</span><span class="vbscript">&lt;%= content %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>\
                        <span class="tag">&lt;/<span class="title">h3</span>&gt;</span>\
                      <span class="tag">&lt;/<span class="title">div</span>&gt;</span>\
                    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>\
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"clearfix"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>\
                  <span class="tag">&lt;/<span class="title">div</span>&gt;</span>\
                <span class="tag">&lt;/<span class="title">li</span>&gt;</span>');
</pre></td></tr></table></figure>

<p>This way integrate so much html code in the html file. It is very ugly.<br>The new way is that in the html file, create a script tag and write type is text/template, and set a <code>id</code> or <code>class</code> on it, and put your template code in it, like that:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/template"</span> <span class="attribute">id</span>=<span class="value">"item-task"</span>&gt;</span><span class="javascript">
 &lt;div class=<span class="string">"col-md-12"</span>&gt;
      <span class="xml"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"grid simple"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"grid-title no-border"</span>&gt;</span>
          <span class="tag">&lt;<span class="title">h4</span>&gt;</span>
            <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"semi-bold"</span>&gt;</span><span class="vbscript">&lt;%= ename %&gt;</span> - <span class="vbscript">&lt;%= cname %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>
          <span class="tag">&lt;/<span class="title">h4</span>&gt;</span>
          <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tools"</span>&gt;</span>
            接口人:<span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"semi-bold"</span>&gt;</span><span class="vbscript">&lt;%= creator %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>
            <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"javascript:;"</span> <span class="attribute">class</span>=<span class="value">"collapse"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span>
            <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"javascript:;"</span> <span class="attribute">class</span>=<span class="value">"remove"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span>
          <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"grid-body no-border"</span>&gt;</span>
          <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"row"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"col-md-10"</span>&gt;</span>
              <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"row"</span>&gt;</span>
                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"col-md-4"</span>&gt;</span>
                描述:<span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"semi-bold"</span>&gt;</span><span class="vbscript">&lt;%= desc %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"col-md-4"</span>&gt;</span>
                标签: <span class="vbscript">&lt;% _.<span class="keyword">each</span>(tags, <span class="keyword">function</span>(t) {;%&gt;</span> <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"label label-success  m-l-10"</span>&gt;</span><span class="vbscript">&lt;%= t %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span> <span class="vbscript">&lt;%});%&gt;</span>
                <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"col-md-4"</span>&gt;</span>
                创建时间:<span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"semi-bold"</span>&gt;</span><span class="vbscript">&lt;%= updatetime %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
              <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
              <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"row"</span>&gt;</span>
                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"col-md-4 m-t-10"</span>&gt;</span>
                运行周期:<span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"semi-bold"</span>&gt;</span><span class="vbscript">&lt;%= cron %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"col-md-4 m-t-10"</span>&gt;</span>
                代码类型:<span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"semi-bold"</span>&gt;</span><span class="vbscript">&lt;%= codetype %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"col-md-4 m-t-10"</span>&gt;</span>
                运行参数:<span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"semi-bold"</span>&gt;</span><span class="vbscript">&lt;%= param %&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
              <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
          <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span></span></span>
</pre></td></tr></table></figure>

<p>and then just write:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="number">_</span>.template(<span class="variable">$(</span><span class="string">'#item-task'</span>).html())
</pre></td></tr></table></figure>

<p>Beautiful, isn&#39;t it ?</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[w]]></title>
    <link href="http://yijingbai.github.io/blog/2014/05/19/w/"/>
    <id>http://yijingbai.github.io/blog/2014/05/19/w/</id>
    <published>2014-05-19T13:14:50.000Z</published>
    <updated>2014-05-19T13:14:50.000Z</updated>
    <content type="html"><![CDATA[]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[关于学习英语的事情]]></title>
    <link href="http://yijingbai.github.io/blog/2014/05/11/aboutstudyenglish/"/>
    <id>http://yijingbai.github.io/blog/2014/05/11/aboutstudyenglish/</id>
    <published>2014-05-11T11:42:52.000Z</published>
    <updated>2014-05-11T11:43:30.000Z</updated>
    <content type="html"><![CDATA[]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[I learned nodejs]]></title>
    <link href="http://yijingbai.github.io/blog/2013/12/11/i-learned-nodejs/"/>
    <id>http://yijingbai.github.io/blog/2013/12/11/i-learned-nodejs/</id>
    <published>2013-12-11T14:35:39.000Z</published>
    <updated>2013-12-11T14:36:15.000Z</updated>
    <content type="html"><![CDATA[<p>Today, I learned nodejs, it is a powerful language.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[how to use django-RESTful api framework]]></title>
    <link href="http://yijingbai.github.io/blog/2013/12/03/how-to-use-django-restful-api-framework/"/>
    <id>http://yijingbai.github.io/blog/2013/12/03/how-to-use-django-restful-api-framework/</id>
    <published>2013-12-03T15:58:38.000Z</published>
    <updated>2013-12-11T14:47:52.000Z</updated>
    <content type="html"><![CDATA[<p>These days, I always use django restful framework to make some RESTful API. And also face many questions.</p>
<p>So I will write a summary here about these questions and some tricks to use this.</p>
<figure class="highlight lang-py"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="title">ProtoFieldsViewSet</span><span class="params">(WrapCreateModelMixin,
                        WrapUpdateModelMixin,
                        WrapRetrieveModelMixin,
                        WrapListModelMixin,
                        viewsets.GenericViewSet)</span>:</span>
    <span class="string">"""
    ProtoField的viewsets,包括新建,更新,详情,列表
    """</span>
    queryset = ProtoField.objects.order_by(<span class="string">'source'</span>)
    serializer_class = ProtoFieldSerializer
</pre></td></tr></table></figure>

<p>For example, use this code could easily make a api with POST,PUT,GET and can provide create,update,get,list object function.</p>
<p>This is kind of a muti-extend. with the basic genericViewSet provide the base function and property, and then if you need some function, you just need to add the corresponding mixins.</p>
<p>If you don&#39;t want to use the provided mixin, you can write API your self:</p>
<figure class="highlight lang-py"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="class"><span class="keyword">class</span> <span class="title">ProtoFieldsValidation</span><span class="params">(APIView)</span>:</span>
    <span class="string">"""
    判断Protofield是否有重复的API
    """</span>
    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span>
        <span class="keyword">if</span> <span class="string">'key'</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:
            <span class="keyword">return</span> Response(returnSuccess(<span class="string">'Please Provide key'</span>))
        fields = ProtoField.objects.filter(status=<span class="number">1</span>)
        keylist = [p.key <span class="keyword">for</span> p <span class="keyword">in</span> fields]
        <span class="keyword">return</span> Response(returnSuccess({<span class="string">'result'</span>: kwargs[<span class="string">'key'</span>] <span class="keyword">not</span> <span class="keyword">in</span> keylist}))
</pre></td></tr></table></figure>

<p>like this. You just need to make a Class that extend APIView class. Then you can add get, post, put …etc. function corresponding to the GET,PUT,POST requests.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[RESTful API design]]></title>
    <link href="http://yijingbai.github.io/blog/2013/11/12/restful-api-design/"/>
    <id>http://yijingbai.github.io/blog/2013/11/12/restful-api-design/</id>
    <published>2013-11-12T10:59:28.000Z</published>
    <updated>2013-11-12T11:06:00.000Z</updated>
    <content type="html"><![CDATA[<p>I have startied to study RESTful API,Use Django Restful API framework</p>
]]></content>
    <category scheme="http://yijingbai.github.io/blog/tags/RESTful/" term="RESTful"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Wating for my JingJS buddy]]></title>
    <link href="http://yijingbai.github.io/blog/2013/11/08/wating-for-my-jingjs-buddy/"/>
    <id>http://yijingbai.github.io/blog/2013/11/08/wating-for-my-jingjs-buddy/</id>
    <published>2013-11-08T13:05:25.000Z</published>
    <updated>2013-11-08T16:32:00.000Z</updated>
    <content type="html"><![CDATA[<p>I will be a volunteer of JingJS during this weekend and I am buddy of a foreign speaker, nick.<br>Now I am wating for him, and hope to see him later~ lol<br><img src="http://ww2.sinaimg.cn/large/74007c8ejw1eae22tj9nej21kw16odsh.jpg" alt=""></p>
]]></content>
    <category scheme="http://yijingbai.github.io/blog/tags/conference social/" term="conference social"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[How to define __unicode__ for django model]]></title>
    <link href="http://yijingbai.github.io/blog/2013/11/08/how-to-define-unicode-function-for-django-model/"/>
    <id>http://yijingbai.github.io/blog/2013/11/08/how-to-define-unicode-function-for-django-model/</id>
    <published>2013-11-08T07:49:16.000Z</published>
    <updated>2013-11-08T08:28:25.000Z</updated>
    <content type="html"><![CDATA[<p>Today I wrote a simple model using django, to make it display more friendly, we have to implement a __unicode__  function like this:</p>
<figure class="highlight lang-python"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">()</span>:</span>
	<span class="keyword">return</span>
</pre></td></tr></table></figure>

<p>but writing something like</p>
<pre><code>"hello <span class="special">{</span>0<span class="special">}</span><span class="command">\n</span><span class="command">\t</span> world <span class="special">{</span>1<span class="special">}</span><span class="command">\n</span><span class="command">\t</span>".format(src, dest)</code></pre>
<p>is ugly, so we can use a easier way:</p>
<figure class="highlight lang-python"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre> <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span>
        <span class="keyword">return</span> <span class="string">u"""
        Configure {0}:
            User: {1}
            status: {2}
            datapath: {3}
            datarule: {4}
            retaintime: {5}
            update_time: {6}
        """</span>.format(
            self.id, self.user, self.status,
            self.datapath, self.datarule,
            self.retaintime, self.update_time)
</pre></td></tr></table></figure>

<p><strong>remember add u</strong> before “”“, and the format in ”“” “”&quot; will be saved,so we do not need to write \t or \n etc. anymore.</p>
]]></content>
    <category scheme="http://yijingbai.github.io/blog/tags/python django/" term="python django"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Hexo configuration]]></title>
    <link href="http://yijingbai.github.io/blog/2013/11/07/hexo-使用配置/"/>
    <id>http://yijingbai.github.io/blog/2013/11/07/hexo-使用配置/</id>
    <published>2013-11-07T12:59:00.000Z</published>
    <updated>2013-12-03T16:24:10.000Z</updated>
    <content type="html"><![CDATA[<p>When using Hexo, especially it is deployed on a second directory, we should not only change following attribute in _config.yml</p>
<pre><code><span class="title">url</span>:
<span class="title">root</span>:</code></pre>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>    <span class="attribute">efefef
</pre></td></tr></table></figure>

<p>but also change</p>
<pre><code>themes/theme name/<span class="filename">_config.yml</code></pre>
<p>if you forget that, the js, css file in the template will not be loaded successfully.</p>
]]></content>
    <category scheme="http://yijingbai.github.io/blog/tags/Hexo blog/" term="Hexo blog"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[hello world]]></title>
    <link href="http://yijingbai.github.io/blog/2013/11/07/hello-world-1/"/>
    <id>http://yijingbai.github.io/blog/2013/11/07/hello-world-1/</id>
    <published>2013-11-07T12:22:20.000Z</published>
    <updated>2013-11-08T08:18:07.000Z</updated>
    <content type="html"><![CDATA[<h3>My First Post</h3>
<p>I begin to write post~<br>This is my first post, I will put my development experiences there.</p>
]]></content>
  </entry>
</feed>
